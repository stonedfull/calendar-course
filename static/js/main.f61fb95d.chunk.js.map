{"version":3,"sources":["store/reducers/auth/Actions.ts","api/UserService.ts","store/reducers/event/types.ts","store/reducers/auth/index.ts","store/reducers/event/index.ts","store/reducers/index.ts","routes/index.ts","store/index.ts","hooks/useTypedSelector.ts","utils/date.ts","components/EventItem.tsx","components/Calendar.tsx","utils/rules.ts","components/EventForm.tsx","store/reducers/event/actionCreators.ts","store/reducers/actionCreators.ts","hooks/useActions.ts","components/LoginForm.tsx","pages/Login.tsx","pages/Event.tsx","components/AppRouter.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["ActionTypes","UserService","axios","get","EventActionEnum","setUser","payload","type","SetUser","setIsAuth","SetIsAuth","setIsLoading","SetIsLoading","setError","SetError","AuthActionCreators","login","form","dispatch","a","setTimeout","getUsers","response","mockUser","data","find","username","password","localStorage","setItem","e","logout","removeItem","initialState","isAuth","error","isLoading","user","guests","events","RouteNames","reducers","auth","state","action","event","SetGuests","SetEvents","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","useTypedSelector","useSelector","formatDate","date","year","getFullYear","month","getMonth","day","getDate","EventItem","onRemove","handleRemove","useCallback","stopPropagation","id","size","description","DeleteOutlined","onClick","Calendar","selected","onAdd","onSelect","dateCellRender","value","formedDate","toDate","currentDayEvents","filter","ev","span","map","moment","PlusCircleOutlined","rules","message","required","validator","_","startOf","isSameOrAfter","Promise","resolve","reject","Error","EventForm","onChange","onSubmit","handleChangeDescription","target","selectDate","handleChangeGuest","guest","onFinish","initialValues","Item","label","name","Option","htmlType","style","width","EventActionCreators","setGuests","setEvents","fetchGuests","console","log","fetchEvents","getItem","json","JSON","parse","currentUserEvents","author","createEvent","push","stringify","removeEvent","newArr","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","handleSubmit","color","loading","publicRoutes","path","Login","exact","component","justify","align","className","privateRoutes","Event","useState","modalVisible","setModalVisible","setSelected","getEvent","uid","setEvent","useEffect","handleAddEvent","v","title","visible","footer","onCancel","AppRouter","route","to","Navbar","Header","padding","theme","mode","selectable","App","Content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f61fb95d.chunk.js","sourcesContent":["import { AppDispatch } from \"../..\";\nimport UserService from \"../../../api/UserService\";\nimport { User } from \"../../../models/User\";\nimport { IActionWithPayload } from \"../actionCreators\";\n\nexport enum ActionTypes {\n  SetUser = \"auth:setUser\",\n  SetIsAuth = \"auth:setIsAuth\",\n  SetIsLoading = \"auth:setIsLoading\",\n  SetError = \"auth:setError\",\n  Login = \"auth:login\",\n  Logout = \"auth:logout\",\n}\n\nexport type Actions = SetUser | SetIsAuth | SetIsLoading | SetError;\n\n// region SetUser\nexport type SetUser = IActionWithPayload<ActionTypes.SetUser, User>;\n\nexport const setUser = (payload: SetUser[\"payload\"]): SetUser => ({ type: ActionTypes.SetUser, payload });\n\nexport const isSetUser = (a: Actions): a is SetUser => a.type === ActionTypes.SetUser;\n// endregion\n\n// region SetIsAuth\nexport type SetIsAuth = IActionWithPayload<ActionTypes.SetIsAuth, boolean>;\n\nexport const setIsAuth = (payload: SetIsAuth[\"payload\"]): SetIsAuth => ({ type: ActionTypes.SetIsAuth, payload });\n\nexport const isSetIsAuth = (a: Actions): a is SetIsAuth => a.type === ActionTypes.SetIsAuth;\n// endregion\n\n// region SetIsLoading\nexport type SetIsLoading = IActionWithPayload<ActionTypes.SetIsLoading, boolean>;\n\nexport const setIsLoading = (payload: SetIsLoading[\"payload\"]): SetIsLoading => ({\n  type: ActionTypes.SetIsLoading,\n  payload,\n});\n\nexport const isSetIsLoading = (a: Actions): a is SetIsLoading => a.type === ActionTypes.SetIsLoading;\n// endregion\n\n// region SetError\nexport type SetError = IActionWithPayload<ActionTypes.SetError, string>;\n\nexport const setError = (payload: SetError[\"payload\"]): SetError => ({ type: ActionTypes.SetError, payload });\n\nexport const isSetError = (a: Actions): a is SetError => a.type === ActionTypes.SetError;\n// endregion\n\n// region Login\nexport const login = (form: User) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(setIsLoading(true));\n    setTimeout(async () => {\n      const response = await UserService.getUsers();\n      const mockUser = response.data.find(\n        ({ username, password }) => username === form.username && password === form.password,\n      );\n      if (mockUser) {\n        localStorage.setItem(\"auth\", \"true\");\n        localStorage.setItem(\"username\", mockUser.username);\n        dispatch(setUser(mockUser));\n        dispatch(setIsAuth(true));\n      } else {\n        dispatch(setError(\"Username or password is wrong!\"));\n      }\n      dispatch(setIsLoading(false));\n    }, 1000);\n  } catch (e) {\n    dispatch(setError(\"Something went wrong!\"));\n  }\n};\n// endregion\n\n// region Logout\nexport const logout = () => async (dispatch: AppDispatch) => {\n  localStorage.removeItem(\"auth\");\n  localStorage.removeItem(\"username\");\n  dispatch(setUser({} as User));\n  dispatch(setIsAuth(false));\n};\n// endregion\n\nexport const AuthActionCreators = {\n  setUser,\n  setIsAuth,\n  setIsLoading,\n  setError,\n  login,\n  logout,\n};\n","import axios, { AxiosResponse } from \"axios\";\nimport { User } from \"../models/User\";\n\nexport default class UserService {\n  static async getUsers(): Promise<AxiosResponse<User[]>> {\n    return axios.get<User[]>(\"./users.json\");\n  }\n}\n","import { Event } from \"../../../models/Event\";\nimport { User } from \"../../../models/User\";\n\nexport interface EventState {\n  guests: User[];\n  events: Event[];\n}\n\nexport enum EventActionEnum {\n  SetGuests = \"setGuests\",\n  SetEvents = \"setEvents\",\n}\n\nexport interface SetGuestsAction {\n  type: EventActionEnum.SetGuests;\n  payload: User[];\n}\n\nexport interface SetEventsAction {\n  type: EventActionEnum.SetEvents;\n  payload: Event[];\n}\n\nexport type EventActions = SetGuestsAction | SetEventsAction;\n","import { User } from \"../../../models/User\";\nimport { AuthState } from \"./types\";\nimport { Actions, ActionTypes } from \"./Actions\";\n\nconst initialState: AuthState = {\n  isAuth: false,\n  error: \"\",\n  isLoading: false,\n  user: {} as User,\n};\n\nexport default function authReducer(state = initialState, action: Actions): AuthState {\n  switch (action.type) {\n    case ActionTypes.SetIsAuth:\n      return { ...state, isAuth: action.payload, isLoading: false };\n    case ActionTypes.SetIsLoading:\n      return { ...state, isLoading: action.payload };\n    case ActionTypes.SetError:\n      return { ...state, error: action.payload, isLoading: false };\n    case ActionTypes.SetUser:\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n}\n","import { EventActionEnum, EventActions, EventState } from \"./types\";\n\nconst initialState: EventState = {\n  guests: [],\n  events: [],\n};\n\nexport default function eventReducer(state = initialState, action: EventActions): EventState {\n  switch (action.type) {\n    case EventActionEnum.SetGuests:\n      return { ...state, guests: action.payload };\n    case EventActionEnum.SetEvents:\n      return { ...state, events: action.payload };\n    default:\n      return state;\n  }\n}\n","import auth from \"./auth\";\nimport event from \"./event\";\n\nconst reducers = {\n  auth,\n  event,\n};\n\nexport default reducers;\n","import { ComponentType } from \"react\";\nimport { Event } from \"../pages/Event\";\nimport { Login } from \"../pages/Login\";\n\nexport enum RouteNames {\n  Login = \"calendar-course/login\",\n  Event = \"calendar-course/\",\n}\n\nexport interface Route {\n  path: RouteNames;\n  component: ComponentType;\n  exact?: boolean;\n}\n\nexport const publicRoutes: Route[] = [{ path: RouteNames.Login, exact: true, component: Login }];\n\nexport const privateRoutes: Route[] = [{ path: RouteNames.Event, exact: true, component: Event }];\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const formatDate = (date: Date): string => {\n  const year = date.getFullYear();\n  const month = date.getMonth() < 9 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\n  const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\n\n  return `${year}.${month}.${day}`;\n};\n","import { Space } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport { MouseEvent, ReactElement, useCallback } from \"react\";\nimport { Event as EventType } from \"../models/Event\";\n\nexport interface Props {\n  event: EventType;\n  onRemove: (id: string) => void;\n}\n\nexport const EventItem = ({ event, onRemove }: Props): ReactElement => {\n  const handleRemove = useCallback(\n    (e: MouseEvent) => {\n      e.stopPropagation();\n      onRemove(event.id);\n    },\n    [event, onRemove],\n  );\n\n  return (\n    <div>\n      <Space size={10}>\n        {event.description}\n        <DeleteOutlined onClick={handleRemove} />\n      </Space>\n    </div>\n  );\n};\n","import { Button, Calendar as Component, Col, Row } from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment, { Moment } from \"moment\";\nimport { ReactElement } from \"react\";\nimport { Event } from \"../models/Event\";\nimport { formatDate } from \"../utils/date\";\nimport { EventItem } from \"./EventItem\";\n\nexport interface Props {\n  events: Event[];\n  selected?: Moment;\n  onRemove: (id: string) => void;\n  onAdd: (v: Moment) => void;\n  onSelect: (v: Moment) => void;\n}\n\nexport const Calendar = ({ events, selected, onRemove, onAdd, onSelect }: Props): ReactElement => {\n  function dateCellRender(value: Moment) {\n    const formedDate = formatDate(value.toDate());\n    const currentDayEvents = events.filter((ev) => ev.date === formedDate);\n\n    return (\n      <Row>\n        <Col span={20}>\n          {currentDayEvents.map((event) => (\n            <EventItem key={event.id} event={event} onRemove={onRemove} />\n          ))}\n        </Col>\n        {((selected && formatDate(selected.toDate()) === formedDate) ||\n          (!selected && formatDate(moment().toDate()) === formedDate)) && (\n          <Col span={4}>\n            <Button type=\"text\" size=\"small\" onClick={() => onAdd(value)}>\n              <PlusCircleOutlined />\n            </Button>\n          </Col>\n        )}\n      </Row>\n    );\n  }\n\n  return <Component dateCellRender={dateCellRender} onSelect={onSelect} />;\n};\n","import moment, { Moment } from \"moment\";\n\nexport const rules = {\n  required: (message: string = \"Required field\") => ({ required: true, message }),\n  isDateAfter: (message: string) => () => ({\n    validator(_: any, value: Moment) {\n      if (value.startOf(\"day\").isSameOrAfter(moment().startOf(\"day\"))) {\n        return Promise.resolve();\n      }\n      return Promise.reject(new Error(message));\n    },\n  }),\n};\n","import { ChangeEvent, ReactElement, useCallback } from \"react\";\nimport { Button, DatePicker, Form, Input, Select } from \"antd\";\nimport { Moment } from \"moment\";\nimport { rules } from \"../utils/rules\";\nimport { User } from \"../models/User\";\nimport { Event } from \"../models/Event\";\n\ninterface LocalEvent extends Omit<Event, \"date\"> {\n  date: Moment;\n}\n\nexport interface Props {\n  value: LocalEvent;\n  guests: User[];\n  onChange: (e: LocalEvent) => void;\n  onSubmit: VoidFunction;\n}\n\nexport const EventForm = ({ value, guests, onChange, onSubmit }: Props): ReactElement => {\n  const handleChangeDescription = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => onChange({ ...value, description: e.target.value }),\n    [value, onChange],\n  );\n  const selectDate = useCallback(\n    (date: Moment | null) => {\n      date && onChange({ ...value, date });\n    },\n    [value, onChange],\n  );\n  const handleChangeGuest = useCallback((guest: string) => onChange({ ...value, guest }), [value, onChange]);\n\n  return (\n    <Form onFinish={onSubmit} initialValues={value}>\n      <Form.Item label=\"Event description\" name=\"description\" rules={[rules.required()]}>\n        <Input onChange={handleChangeDescription} />\n      </Form.Item>\n      <Form.Item\n        label=\"Event date\"\n        name=\"date\"\n        rules={[rules.required(), rules.isDateAfter(\"Cannot create an event in the past\")]}\n      >\n        <DatePicker onChange={selectDate} />\n      </Form.Item>\n      <Form.Item label=\"Select guest\" name=\"guest\" rules={[rules.required()]}>\n        <Select value={value.guest} onChange={handleChangeGuest}>\n          {guests.map(({ username }) => (\n            <Select.Option key={username} value={username}>\n              {username}\n            </Select.Option>\n          ))}\n        </Select>\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }}>\n          Create\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { AppDispatch } from \"../..\";\nimport UserService from \"../../../api/UserService\";\nimport { Event } from \"../../../models/Event\";\nimport { User } from \"../../../models/User\";\nimport { EventActionEnum, SetEventsAction, SetGuestsAction } from \"./types\";\n\nexport const EventActionCreators = {\n  setGuests: (payload: User[]): SetGuestsAction => ({ type: EventActionEnum.SetGuests, payload }),\n  setEvents: (payload: Event[]): SetEventsAction => ({ type: EventActionEnum.SetEvents, payload }),\n  fetchGuests: () => async (dispatch: AppDispatch) => {\n    try {\n      const response = await UserService.getUsers();\n      dispatch(EventActionCreators.setGuests(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  fetchEvents: (username: string) => async (dispatch: AppDispatch) => {\n    try {\n      const events = localStorage.getItem(\"events\") ?? \"[]\";\n      const json = JSON.parse(events) as Event[];\n      const currentUserEvents = json.filter((ev) => ev.author === username || ev.guest === username);\n      dispatch(EventActionCreators.setEvents(currentUserEvents));\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  createEvent: (event: Event) => async (dispatch: AppDispatch) => {\n    try {\n      const events = localStorage.getItem(\"events\") ?? \"[]\";\n      const json = JSON.parse(events) as Event[];\n      json.push(event);\n      dispatch(EventActionCreators.setEvents(json));\n      localStorage.setItem(\"events\", JSON.stringify(json));\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  removeEvent: (id: string) => async (dispatch: AppDispatch) => {\n    try {\n      const events = localStorage.getItem(\"events\") ?? \"[]\";\n      const json = JSON.parse(events) as Event[];\n      const newArr = json.filter((ev) => ev.id !== id);\n      dispatch(EventActionCreators.setEvents(newArr));\n      localStorage.setItem(\"events\", JSON.stringify(newArr));\n    } catch (e) {\n      console.log(e);\n    }\n  },\n};\n","import { AuthActionCreators } from \"./auth/Actions\";\nimport { EventActionCreators } from \"./event/actionCreators\";\n\nexport interface IAction<Type extends string> {\n  type: Type;\n}\nexport interface IActionWithPayload<T extends string, Payload> {\n  type: T;\n  payload: Payload;\n}\n\nexport const allActionCreators = { ...AuthActionCreators, ...EventActionCreators };\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { allActionCreators } from \"../store/reducers/actionCreators\";\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(allActionCreators, dispatch);\n};\n","import { ReactElement, useCallback } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { rules } from \"../utils/rules\";\nimport { User } from \"../models/User\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { useActions } from \"../hooks/useActions\";\n\nexport const LoginForm = (): ReactElement => {\n  const { login } = useActions();\n  const { error, isLoading } = useTypedSelector((state) => state.auth);\n\n  const handleSubmit = useCallback(\n    (form: User) => {\n      login(form);\n    },\n    [login],\n  );\n\n  return (\n    <Form onFinish={handleSubmit}>\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\n      <Form.Item label=\"Username\" name=\"username\" rules={[rules.required(\"Please input your username\")]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Password\" name=\"password\" rules={[rules.required(\"Please input your password\")]}>\n        <Input type=\"password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" style={{ width: \"100%\" }} loading={isLoading}>\n          Login\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { Card, Layout, Row } from \"antd\";\nimport { ReactElement } from \"react\";\nimport { LoginForm } from \"../components/LoginForm\";\n\nexport const Login = (): ReactElement => {\n  return (\n    <Layout>\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\n        <Card>\n          <LoginForm />\n        </Card>\n      </Row>\n    </Layout>\n  );\n};\n","import { Layout, Modal } from \"antd\";\nimport moment, { Moment } from \"moment\";\nimport { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport { uid } from \"uid\";\nimport { Calendar } from \"../components/Calendar\";\nimport { EventForm } from \"../components/EventForm\";\nimport { useActions } from \"../hooks/useActions\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { Event as EventType } from \"../models/Event\";\nimport { formatDate } from \"../utils/date\";\n\ninterface LocalEvent extends Omit<EventType, \"date\"> {\n  date: Moment;\n}\n\nexport const Event = (): ReactElement => {\n  const [modalVisible, setModalVisible] = useState<boolean>(false);\n  const { guests, events } = useTypedSelector((state) => state.event);\n  const { fetchGuests, fetchEvents, createEvent, removeEvent } = useActions();\n  const { user } = useTypedSelector((state) => state.auth);\n  const [selected, setSelected] = useState<Moment>();\n\n  const getEvent = useCallback(\n    (date: Moment): LocalEvent => ({\n      id: uid(),\n      author: user.username,\n      guest: \"\",\n      date,\n      description: \"\",\n    }),\n    [user],\n  );\n  const [event, setEvent] = useState<LocalEvent>(getEvent(moment()));\n\n  useEffect(() => {\n    fetchGuests();\n    fetchEvents(user.username);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setModalVisible(false);\n    createEvent({ ...event, date: formatDate(event.date.toDate()) });\n    setEvent(getEvent(moment()));\n  }, [event, createEvent, setModalVisible, setEvent, getEvent]);\n  const handleRemove = useCallback((id: string) => removeEvent(id), [removeEvent]);\n  const handleAddEvent = useCallback(\n    (v: Moment) => {\n      setEvent(getEvent(v));\n      setModalVisible(true);\n    },\n    [setEvent, setModalVisible, getEvent],\n  );\n\n  return (\n    <Layout>\n      <Calendar\n        events={events}\n        selected={selected}\n        onRemove={handleRemove}\n        onAdd={handleAddEvent}\n        onSelect={setSelected}\n      />\n      {modalVisible && (\n        <Modal title=\"Add an event\" visible={modalVisible} footer={null} onCancel={() => setModalVisible(false)}>\n          <EventForm guests={guests} value={event} onChange={setEvent} onSubmit={handleSubmit} />\n        </Modal>\n      )}\n    </Layout>\n  );\n};\n","import { ReactElement } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { privateRoutes, publicRoutes, RouteNames } from \"../routes\";\n\nexport const AppRouter = (): ReactElement => {\n  const { isAuth } = useTypedSelector((state) => state.auth);\n\n  return isAuth ? (\n    <Switch>\n      {privateRoutes.map((route) => (\n        <Route key={route.path} {...route} />\n      ))}\n      <Redirect to={RouteNames.Event} />\n    </Switch>\n  ) : (\n    <Switch>\n      {publicRoutes.map((route) => (\n        <Route key={route.path} {...route} />\n      ))}\n      <Redirect to={RouteNames.Login} />\n    </Switch>\n  );\n};\n","import { ReactElement } from \"react\";\nimport { Layout, Menu, Row } from \"antd\";\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\nimport { useActions } from \"../hooks/useActions\";\n\nexport const Navbar = (): ReactElement => {\n  const { logout } = useActions();\n  const { isAuth, user } = useTypedSelector((state) => state.auth);\n\n  return (\n    <Layout.Header>\n      {isAuth ? (\n        <Row>\n          <div style={{ color: \"white\", padding: \"0 20px\" }}>{user.username}</div>\n          <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n            <Menu.Item key={1} onClick={logout}>\n              Logout\n            </Menu.Item>\n          </Menu>\n        </Row>\n      ) : (\n        <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\n          <Menu.Item key={1}>Login</Menu.Item>\n        </Menu>\n      )}\n    </Layout.Header>\n  );\n};\n","import { Layout } from \"antd\";\nimport { ReactElement, useEffect } from \"react\";\nimport { AppRouter } from \"./components/AppRouter\";\nimport { Navbar } from \"./components/Navbar\";\nimport \"./App.css\";\nimport { useActions } from \"./hooks/useActions\";\nimport { User } from \"./models/User\";\n\nconst App = (): ReactElement => {\n  const { setUser, setIsAuth } = useActions();\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setUser({ username: localStorage.getItem(\"username\" || \"\") } as User);\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <Layout>\n      <Navbar />\n      <Layout.Content>\n        <AppRouter />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { store } from \"./store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}